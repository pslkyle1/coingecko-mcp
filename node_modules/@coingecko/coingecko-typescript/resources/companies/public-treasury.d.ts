import { APIResource } from "../../core/resource.js";
import { APIPromise } from "../../core/api-promise.js";
import { RequestOptions } from "../../internal/request-options.js";
export declare class PublicTreasury extends APIResource {
    /**
     * This endpoint allows you **query public companiesâ€™ Bitcoin or Ethereum
     * holdings**
     *
     * @example
     * ```ts
     * const response =
     *   await client.companies.publicTreasury.getCoinID(
     *     'bitcoin',
     *   );
     * ```
     */
    getCoinID(coinID: 'bitcoin' | 'ethereum', options?: RequestOptions): APIPromise<PublicTreasuryGetCoinIDResponse>;
}
export interface PublicTreasuryGetCoinIDResponse {
    companies?: Array<PublicTreasuryGetCoinIDResponse.Company>;
    /**
     * market cap dominance
     */
    market_cap_dominance?: number;
    /**
     * total btc/eth holdings of companies
     */
    total_holdings?: number;
    /**
     * total btc/eth holdings value in usd
     */
    total_value_usd?: number;
}
export declare namespace PublicTreasuryGetCoinIDResponse {
    interface Company {
        /**
         * company incorporated country
         */
        country?: string;
        /**
         * company name
         */
        name?: string;
        /**
         * percentage of total btc/eth supply
         */
        percentage_of_total_supply?: number;
        /**
         * company symbol
         */
        symbol?: string;
        /**
         * total current value of btc/eth holdings in usd
         */
        total_current_value_usd?: number;
        /**
         * total entry value in usd
         */
        total_entry_value_usd?: number;
        /**
         * total btc/eth holdings of company
         */
        total_holdings?: number;
    }
}
export declare namespace PublicTreasury {
    export { type PublicTreasuryGetCoinIDResponse as PublicTreasuryGetCoinIDResponse };
}
//# sourceMappingURL=public-treasury.d.ts.map