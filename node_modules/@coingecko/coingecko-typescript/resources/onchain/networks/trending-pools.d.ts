import { APIResource } from "../../../core/resource.js";
import { APIPromise } from "../../../core/api-promise.js";
import { RequestOptions } from "../../../internal/request-options.js";
export declare class TrendingPools extends APIResource {
    /**
     * This endpoint allows you to **query all the trending pools across all networks
     * on GeckoTerminal**
     *
     * @example
     * ```ts
     * const trendingPool =
     *   await client.onchain.networks.trendingPools.get();
     * ```
     */
    get(query?: TrendingPoolGetParams | null | undefined, options?: RequestOptions): APIPromise<TrendingPoolGetResponse>;
    /**
     * This endpoint allows you to **query the trending pools based on the provided
     * network**
     *
     * @example
     * ```ts
     * const response =
     *   await client.onchain.networks.trendingPools.getNetwork(
     *     'eth',
     *   );
     * ```
     */
    getNetwork(network: string, query?: TrendingPoolGetNetworkParams | null | undefined, options?: RequestOptions): APIPromise<TrendingPoolGetNetworkResponse>;
}
export interface TrendingPoolGetResponse {
    data?: Array<TrendingPoolGetResponse.Data>;
    included?: Array<TrendingPoolGetResponse.Included>;
}
export declare namespace TrendingPoolGetResponse {
    interface Data {
        id?: string;
        attributes?: Data.Attributes;
        relationships?: Data.Relationships;
        type?: string;
    }
    namespace Data {
        interface Attributes {
            address?: string;
            base_token_price_native_currency?: string;
            base_token_price_quote_token?: string;
            base_token_price_usd?: string;
            fdv_usd?: string;
            market_cap_usd?: string;
            name?: string;
            pool_created_at?: string;
            price_change_percentage?: Attributes.PriceChangePercentage;
            quote_token_price_base_token?: string;
            quote_token_price_native_currency?: string;
            quote_token_price_usd?: string;
            reserve_in_usd?: string;
            transactions?: Attributes.Transactions;
            volume_usd?: Attributes.VolumeUsd;
        }
        namespace Attributes {
            interface PriceChangePercentage {
                h1?: string;
                h24?: string;
                h6?: string;
                m15?: string;
                m30?: string;
                m5?: string;
            }
            interface Transactions {
                h1?: Transactions.H1;
                h24?: Transactions.H24;
                m15?: Transactions.M15;
                m30?: Transactions.M30;
                m5?: Transactions.M5;
            }
            namespace Transactions {
                interface H1 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface H24 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M15 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M30 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M5 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
            }
            interface VolumeUsd {
                h1?: string;
                h24?: string;
                h6?: string;
                m15?: string;
                m30?: string;
                m5?: string;
            }
        }
        interface Relationships {
            base_token?: Relationships.BaseToken;
            dex?: Relationships.Dex;
            quote_token?: Relationships.QuoteToken;
        }
        namespace Relationships {
            interface BaseToken {
                data?: BaseToken.Data;
            }
            namespace BaseToken {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
            interface Dex {
                data?: Dex.Data;
            }
            namespace Dex {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
            interface QuoteToken {
                data?: QuoteToken.Data;
            }
            namespace QuoteToken {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
        }
    }
    interface Included {
        id?: string;
        attributes?: Included.Attributes;
        type?: string;
    }
    namespace Included {
        interface Attributes {
            address?: string;
            coingecko_coin_id?: string;
            decimals?: number;
            image_url?: string;
            name?: string;
            symbol?: string;
        }
    }
}
export interface TrendingPoolGetNetworkResponse {
    data?: Array<TrendingPoolGetNetworkResponse.Data>;
    included?: Array<TrendingPoolGetNetworkResponse.Included>;
}
export declare namespace TrendingPoolGetNetworkResponse {
    interface Data {
        id?: string;
        attributes?: Data.Attributes;
        relationships?: Data.Relationships;
        type?: string;
    }
    namespace Data {
        interface Attributes {
            address?: string;
            base_token_price_native_currency?: string;
            base_token_price_quote_token?: string;
            base_token_price_usd?: string;
            fdv_usd?: string;
            market_cap_usd?: string;
            name?: string;
            pool_created_at?: string;
            price_change_percentage?: Attributes.PriceChangePercentage;
            quote_token_price_base_token?: string;
            quote_token_price_native_currency?: string;
            quote_token_price_usd?: string;
            reserve_in_usd?: string;
            transactions?: Attributes.Transactions;
            volume_usd?: Attributes.VolumeUsd;
        }
        namespace Attributes {
            interface PriceChangePercentage {
                h1?: string;
                h24?: string;
                h6?: string;
                m15?: string;
                m30?: string;
                m5?: string;
            }
            interface Transactions {
                h1?: Transactions.H1;
                h24?: Transactions.H24;
                m15?: Transactions.M15;
                m30?: Transactions.M30;
                m5?: Transactions.M5;
            }
            namespace Transactions {
                interface H1 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface H24 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M15 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M30 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
                interface M5 {
                    buyers?: number;
                    buys?: number;
                    sellers?: number;
                    sells?: number;
                }
            }
            interface VolumeUsd {
                h1?: string;
                h24?: string;
                h6?: string;
                m15?: string;
                m30?: string;
                m5?: string;
            }
        }
        interface Relationships {
            base_token?: Relationships.BaseToken;
            dex?: Relationships.Dex;
            quote_token?: Relationships.QuoteToken;
        }
        namespace Relationships {
            interface BaseToken {
                data?: BaseToken.Data;
            }
            namespace BaseToken {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
            interface Dex {
                data?: Dex.Data;
            }
            namespace Dex {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
            interface QuoteToken {
                data?: QuoteToken.Data;
            }
            namespace QuoteToken {
                interface Data {
                    id?: string;
                    type?: string;
                }
            }
        }
    }
    interface Included {
        id?: string;
        attributes?: Included.Attributes;
        type?: string;
    }
    namespace Included {
        interface Attributes {
            address?: string;
            coingecko_coin_id?: string;
            decimals?: number;
            image_url?: string;
            name?: string;
            symbol?: string;
        }
    }
}
export interface TrendingPoolGetParams {
    /**
     * duration to sort trending list by Default value: 24h
     */
    duration?: '5m' | '1h' | '6h' | '24h';
    /**
     * attributes to include, comma-separated if more than one to include Available
     * values: `base_token`, `quote_token`, `dex`, `network`. Example: `base_token` or
     * `base_token,dex`
     */
    include?: string;
    /**
     * page through results Default value: 1
     */
    page?: number;
}
export interface TrendingPoolGetNetworkParams {
    /**
     * duration to sort trending list by Default value: 24h
     */
    duration?: '5m' | '1h' | '6h' | '24h';
    /**
     * attributes to include, comma-separated if more than one to include Available
     * values: `base_token`, `quote_token`, `dex`
     */
    include?: string;
    /**
     * page through results Default value: 1
     */
    page?: number;
}
export declare namespace TrendingPools {
    export { type TrendingPoolGetResponse as TrendingPoolGetResponse, type TrendingPoolGetNetworkResponse as TrendingPoolGetNetworkResponse, type TrendingPoolGetParams as TrendingPoolGetParams, type TrendingPoolGetNetworkParams as TrendingPoolGetNetworkParams, };
}
//# sourceMappingURL=trending-pools.d.ts.map