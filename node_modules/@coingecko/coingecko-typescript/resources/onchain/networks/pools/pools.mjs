// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../../core/resource.mjs";
import * as InfoAPI from "./info.mjs";
import { Info } from "./info.mjs";
import * as MultiAPI from "./multi.mjs";
import { Multi } from "./multi.mjs";
import * as OhlcvAPI from "./ohlcv.mjs";
import { Ohlcv } from "./ohlcv.mjs";
import * as TradesAPI from "./trades.mjs";
import { Trades } from "./trades.mjs";
import { path } from "../../../../internal/utils/path.mjs";
export class Pools extends APIResource {
    constructor() {
        super(...arguments);
        this.multi = new MultiAPI.Multi(this._client);
        this.info = new InfoAPI.Info(this._client);
        this.ohlcv = new OhlcvAPI.Ohlcv(this._client);
        this.trades = new TradesAPI.Trades(this._client);
    }
    /**
     * This endpoint allows you to **query all the top pools based on the provided
     * network**
     *
     * @example
     * ```ts
     * const pool = await client.onchain.networks.pools.get('eth');
     * ```
     */
    get(network, query = {}, options) {
        return this._client.get(path `/onchain/networks/${network}/pools`, { query, ...options });
    }
    /**
     * This endpoint allows you to **query the specific pool based on the provided
     * network and pool address**
     *
     * @example
     * ```ts
     * const response =
     *   await client.onchain.networks.pools.getAddress(
     *     '0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640',
     *     { network: 'eth' },
     *   );
     * ```
     */
    getAddress(address, params, options) {
        const { network, ...query } = params;
        return this._client.get(path `/onchain/networks/${network}/pools/${address}`, { query, ...options });
    }
}
Pools.Multi = Multi;
Pools.Info = Info;
Pools.Ohlcv = Ohlcv;
Pools.Trades = Trades;
//# sourceMappingURL=pools.mjs.map