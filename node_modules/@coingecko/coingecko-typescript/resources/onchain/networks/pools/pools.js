"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pools = void 0;
const tslib_1 = require("../../../../internal/tslib.js");
const resource_1 = require("../../../../core/resource.js");
const InfoAPI = tslib_1.__importStar(require("./info.js"));
const info_1 = require("./info.js");
const MultiAPI = tslib_1.__importStar(require("./multi.js"));
const multi_1 = require("./multi.js");
const OhlcvAPI = tslib_1.__importStar(require("./ohlcv.js"));
const ohlcv_1 = require("./ohlcv.js");
const TradesAPI = tslib_1.__importStar(require("./trades.js"));
const trades_1 = require("./trades.js");
const path_1 = require("../../../../internal/utils/path.js");
class Pools extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.multi = new MultiAPI.Multi(this._client);
        this.info = new InfoAPI.Info(this._client);
        this.ohlcv = new OhlcvAPI.Ohlcv(this._client);
        this.trades = new TradesAPI.Trades(this._client);
    }
    /**
     * This endpoint allows you to **query all the top pools based on the provided
     * network**
     *
     * @example
     * ```ts
     * const pool = await client.onchain.networks.pools.get('eth');
     * ```
     */
    get(network, query = {}, options) {
        return this._client.get((0, path_1.path) `/onchain/networks/${network}/pools`, { query, ...options });
    }
    /**
     * This endpoint allows you to **query the specific pool based on the provided
     * network and pool address**
     *
     * @example
     * ```ts
     * const response =
     *   await client.onchain.networks.pools.getAddress(
     *     '0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640',
     *     { network: 'eth' },
     *   );
     * ```
     */
    getAddress(address, params, options) {
        const { network, ...query } = params;
        return this._client.get((0, path_1.path) `/onchain/networks/${network}/pools/${address}`, { query, ...options });
    }
}
exports.Pools = Pools;
Pools.Multi = multi_1.Multi;
Pools.Info = info_1.Info;
Pools.Ohlcv = ohlcv_1.Ohlcv;
Pools.Trades = trades_1.Trades;
//# sourceMappingURL=pools.js.map