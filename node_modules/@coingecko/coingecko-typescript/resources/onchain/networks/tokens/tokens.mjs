// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../../core/resource.mjs";
import * as HoldersChartAPI from "./holders-chart.mjs";
import { HoldersChart } from "./holders-chart.mjs";
import * as InfoAPI from "./info.mjs";
import { Info } from "./info.mjs";
import * as MultiAPI from "./multi.mjs";
import { Multi } from "./multi.mjs";
import * as OhlcvAPI from "./ohlcv.mjs";
import { Ohlcv } from "./ohlcv.mjs";
import * as PoolsAPI from "./pools.mjs";
import { Pools } from "./pools.mjs";
import * as TopHoldersAPI from "./top-holders.mjs";
import { TopHolders } from "./top-holders.mjs";
import * as TradesAPI from "./trades.mjs";
import { Trades } from "./trades.mjs";
import { path } from "../../../../internal/utils/path.mjs";
export class Tokens extends APIResource {
    constructor() {
        super(...arguments);
        this.multi = new MultiAPI.Multi(this._client);
        this.info = new InfoAPI.Info(this._client);
        this.topHolders = new TopHoldersAPI.TopHolders(this._client);
        this.holdersChart = new HoldersChartAPI.HoldersChart(this._client);
        this.ohlcv = new OhlcvAPI.Ohlcv(this._client);
        this.pools = new PoolsAPI.Pools(this._client);
        this.trades = new TradesAPI.Trades(this._client);
    }
    /**
     * This endpoint allows you to **query specific token data based on the provided
     * token contract address on a network**
     *
     * @example
     * ```ts
     * const response =
     *   await client.onchain.networks.tokens.getAddress(
     *     '0xdac17f958d2ee523a2206206994597c13d831ec7',
     *     { network: 'eth' },
     *   );
     * ```
     */
    getAddress(address, params, options) {
        const { network, ...query } = params;
        return this._client.get(path `/onchain/networks/${network}/tokens/${address}`, { query, ...options });
    }
}
Tokens.Multi = Multi;
Tokens.Info = Info;
Tokens.TopHolders = TopHolders;
Tokens.HoldersChart = HoldersChart;
Tokens.Ohlcv = Ohlcv;
Tokens.Pools = Pools;
Tokens.Trades = Trades;
//# sourceMappingURL=tokens.mjs.map