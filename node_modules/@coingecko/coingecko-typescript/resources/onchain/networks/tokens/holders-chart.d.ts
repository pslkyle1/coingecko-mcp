import { APIResource } from "../../../../core/resource.js";
import { APIPromise } from "../../../../core/api-promise.js";
import { RequestOptions } from "../../../../internal/request-options.js";
export declare class HoldersChart extends APIResource {
    /**
     * This endpoint allows you to **get the historical token holders chart based on
     * the provided token contract address on a network**
     *
     * @example
     * ```ts
     * const holdersChart =
     *   await client.onchain.networks.tokens.holdersChart.get(
     *     '0xdac17f958d2ee523a2206206994597c13d831ec7',
     *     { network: 'eth' },
     *   );
     * ```
     */
    get(tokenAddress: string, params: HoldersChartGetParams, options?: RequestOptions): APIPromise<HoldersChartGetResponse>;
}
export interface HoldersChartGetResponse {
    data?: HoldersChartGetResponse.Data;
    meta?: HoldersChartGetResponse.Meta;
}
export declare namespace HoldersChartGetResponse {
    interface Data {
        id?: string;
        attributes?: Data.Attributes;
        type?: string;
    }
    namespace Data {
        interface Attributes {
            token_holders_list?: Array<Array<string>>;
        }
    }
    interface Meta {
        token?: Meta.Token;
    }
    namespace Meta {
        interface Token {
            address?: string;
            coingecko_coin_id?: string;
            name?: string;
            symbol?: string;
        }
    }
}
export interface HoldersChartGetParams {
    /**
     * Path param: network ID \*refers to [/networks](/reference/networks-list)
     */
    network: string;
    /**
     * Query param: number of days to return the historical token holders chart Default
     * value: 7
     */
    days?: '7' | '30' | 'max';
}
export declare namespace HoldersChart {
    export { type HoldersChartGetResponse as HoldersChartGetResponse, type HoldersChartGetParams as HoldersChartGetParams, };
}
//# sourceMappingURL=holders-chart.d.ts.map