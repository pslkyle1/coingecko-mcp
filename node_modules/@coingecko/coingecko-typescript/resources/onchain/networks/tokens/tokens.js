"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tokens = void 0;
const tslib_1 = require("../../../../internal/tslib.js");
const resource_1 = require("../../../../core/resource.js");
const HoldersChartAPI = tslib_1.__importStar(require("./holders-chart.js"));
const holders_chart_1 = require("./holders-chart.js");
const InfoAPI = tslib_1.__importStar(require("./info.js"));
const info_1 = require("./info.js");
const MultiAPI = tslib_1.__importStar(require("./multi.js"));
const multi_1 = require("./multi.js");
const OhlcvAPI = tslib_1.__importStar(require("./ohlcv.js"));
const ohlcv_1 = require("./ohlcv.js");
const PoolsAPI = tslib_1.__importStar(require("./pools.js"));
const pools_1 = require("./pools.js");
const TopHoldersAPI = tslib_1.__importStar(require("./top-holders.js"));
const top_holders_1 = require("./top-holders.js");
const TradesAPI = tslib_1.__importStar(require("./trades.js"));
const trades_1 = require("./trades.js");
const path_1 = require("../../../../internal/utils/path.js");
class Tokens extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.multi = new MultiAPI.Multi(this._client);
        this.info = new InfoAPI.Info(this._client);
        this.topHolders = new TopHoldersAPI.TopHolders(this._client);
        this.holdersChart = new HoldersChartAPI.HoldersChart(this._client);
        this.ohlcv = new OhlcvAPI.Ohlcv(this._client);
        this.pools = new PoolsAPI.Pools(this._client);
        this.trades = new TradesAPI.Trades(this._client);
    }
    /**
     * This endpoint allows you to **query specific token data based on the provided
     * token contract address on a network**
     *
     * @example
     * ```ts
     * const response =
     *   await client.onchain.networks.tokens.getAddress(
     *     '0xdac17f958d2ee523a2206206994597c13d831ec7',
     *     { network: 'eth' },
     *   );
     * ```
     */
    getAddress(address, params, options) {
        const { network, ...query } = params;
        return this._client.get((0, path_1.path) `/onchain/networks/${network}/tokens/${address}`, { query, ...options });
    }
}
exports.Tokens = Tokens;
Tokens.Multi = multi_1.Multi;
Tokens.Info = info_1.Info;
Tokens.TopHolders = top_holders_1.TopHolders;
Tokens.HoldersChart = holders_chart_1.HoldersChart;
Tokens.Ohlcv = ohlcv_1.Ohlcv;
Tokens.Pools = pools_1.Pools;
Tokens.Trades = trades_1.Trades;
//# sourceMappingURL=tokens.js.map