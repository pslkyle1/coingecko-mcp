import { APIResource } from "../../core/resource.mjs";
import * as DecentralizedFinanceDefiAPI from "./decentralized-finance-defi.mjs";
import { DecentralizedFinanceDefi, DecentralizedFinanceDefiGetResponse } from "./decentralized-finance-defi.mjs";
import * as MarketCapChartAPI from "./market-cap-chart.mjs";
import { MarketCapChart, MarketCapChartGetParams, MarketCapChartGetResponse } from "./market-cap-chart.mjs";
import { APIPromise } from "../../core/api-promise.mjs";
import { RequestOptions } from "../../internal/request-options.mjs";
export declare class Global extends APIResource {
    decentralizedFinanceDefi: DecentralizedFinanceDefiAPI.DecentralizedFinanceDefi;
    marketCapChart: MarketCapChartAPI.MarketCapChart;
    /**
     * This endpoint allows you **query cryptocurrency global data including active
     * cryptocurrencies, markets, total crypto market cap and etc**
     *
     * @example
     * ```ts
     * const global = await client.global.get();
     * ```
     */
    get(options?: RequestOptions): APIPromise<GlobalGetResponse>;
}
export interface GlobalGetResponse {
    data?: GlobalGetResponse.Data;
}
export declare namespace GlobalGetResponse {
    interface Data {
        /**
         * number of active cryptocurrencies
         */
        active_cryptocurrencies?: number;
        /**
         * number of ended icos
         */
        ended_icos?: number;
        /**
         * cryptocurrencies market cap change percentage in 24 hours in usd
         */
        market_cap_change_percentage_24h_usd?: number;
        /**
         * cryptocurrencies market cap percentage
         */
        market_cap_percentage?: Data.MarketCapPercentage;
        /**
         * number of exchanges
         */
        markets?: number;
        /**
         * number of ongoing icos
         */
        ongoing_icos?: number;
        /**
         * cryptocurrencies total market cap
         */
        total_market_cap?: Data.TotalMarketCap;
        /**
         * cryptocurrencies total volume
         */
        total_volume?: Data.TotalVolume;
        /**
         * number of upcoming icos
         */
        upcoming_icos?: number;
        updated_at?: number;
    }
    namespace Data {
        /**
         * cryptocurrencies market cap percentage
         */
        interface MarketCapPercentage {
            btc?: number;
            eth?: number;
        }
        /**
         * cryptocurrencies total market cap
         */
        interface TotalMarketCap {
            btc?: number;
            eth?: number;
        }
        /**
         * cryptocurrencies total volume
         */
        interface TotalVolume {
            btc?: number;
            eth?: number;
        }
    }
}
export declare namespace Global {
    export { type GlobalGetResponse as GlobalGetResponse };
    export { DecentralizedFinanceDefi as DecentralizedFinanceDefi, type DecentralizedFinanceDefiGetResponse as DecentralizedFinanceDefiGetResponse, };
    export { MarketCapChart as MarketCapChart, type MarketCapChartGetResponse as MarketCapChartGetResponse, type MarketCapChartGetParams as MarketCapChartGetParams, };
}
//# sourceMappingURL=global.d.mts.map