"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.tool = exports.metadata = void 0;
const types_1 = require("@coingecko/coingecko-mcp/tools/types");
exports.metadata = {
    resource: 'onchain.search.pools',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/onchain/search/pools',
    operationId: 'search-pools',
};
exports.tool = {
    name: 'get_search_onchain_pools',
    description: 'This endpoint allows you to **search for pools on a network**',
    inputSchema: {
        type: 'object',
        properties: {
            include: {
                type: 'string',
                description: 'attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`',
            },
            network: {
                type: 'string',
                description: 'network ID <br> *refers to [/networks](/reference/networks-list)',
            },
            page: {
                type: 'integer',
                description: 'page through results <br> Default value: 1',
            },
            query: {
                type: 'string',
                description: 'search query',
            },
        },
    },
};
const handler = async (client, args) => {
    const body = args;
    return (0, types_1.asTextContentResult)(await client.onchain.search.pools.get(body));
};
exports.handler = handler;
exports.default = { metadata: exports.metadata, tool: exports.tool, handler: exports.handler };
//# sourceMappingURL=get-search-onchain-pools.js.map