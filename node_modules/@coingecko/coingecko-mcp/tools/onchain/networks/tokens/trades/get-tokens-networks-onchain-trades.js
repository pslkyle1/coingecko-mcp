"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.tool = exports.metadata = void 0;
const types_1 = require("@coingecko/coingecko-mcp/tools/types");
exports.metadata = {
    resource: 'onchain.networks.tokens.trades',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/onchain/networks/{network}/tokens/{token_address}/trades',
    operationId: 'token-trades-contract-address',
};
exports.tool = {
    name: 'get_tokens_networks_onchain_trades',
    description: 'This endpoint allows you to **query the last 300 trades in the past 24 hours, across all pools, based on the provided token contract address on a network**',
    inputSchema: {
        type: 'object',
        properties: {
            network: {
                type: 'string',
            },
            token_address: {
                type: 'string',
            },
            trade_volume_in_usd_greater_than: {
                type: 'number',
                description: 'filter trades by trade volume in USD greater than this value <br> Default value: 0',
            },
        },
    },
};
const handler = async (client, args) => {
    const { token_address, ...body } = args;
    return (0, types_1.asTextContentResult)(await client.onchain.networks.tokens.trades.get(token_address, body));
};
exports.handler = handler;
exports.default = { metadata: exports.metadata, tool: exports.tool, handler: exports.handler };
//# sourceMappingURL=get-tokens-networks-onchain-trades.js.map