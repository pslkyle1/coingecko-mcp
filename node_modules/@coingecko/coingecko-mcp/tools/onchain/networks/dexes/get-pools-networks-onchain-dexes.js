"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.tool = exports.metadata = void 0;
const types_1 = require("@coingecko/coingecko-mcp/tools/types");
exports.metadata = {
    resource: 'onchain.networks.dexes',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/onchain/networks/{network}/dexes/{dex}/pools',
    operationId: 'top-pools-dex',
};
exports.tool = {
    name: 'get_pools_networks_onchain_dexes',
    description: 'This endpoint allows you to **query all the top pools based on the provided network and decentralized exchange (DEX)**',
    inputSchema: {
        type: 'object',
        properties: {
            network: {
                type: 'string',
            },
            dex: {
                type: 'string',
            },
            include: {
                type: 'string',
                description: 'attributes to include, comma-separated if more than one to include <br> Available values: `base_token`, `quote_token`, `dex`',
            },
            page: {
                type: 'integer',
                description: 'page through results <br> Default value: 1',
            },
            sort: {
                type: 'string',
                description: 'sort the pools by field <br> Default value: h24_tx_count_desc',
                enum: ['h24_tx_count_desc', 'h24_volume_usd_desc'],
            },
        },
    },
};
const handler = async (client, args) => {
    const { dex, ...body } = args;
    return (0, types_1.asTextContentResult)(await client.onchain.networks.dexes.getPools(dex, body));
};
exports.handler = handler;
exports.default = { metadata: exports.metadata, tool: exports.tool, handler: exports.handler };
//# sourceMappingURL=get-pools-networks-onchain-dexes.js.map