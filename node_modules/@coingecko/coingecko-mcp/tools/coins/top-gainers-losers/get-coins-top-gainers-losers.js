"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.tool = exports.metadata = void 0;
const types_1 = require("@coingecko/coingecko-mcp/tools/types");
exports.metadata = {
    resource: 'coins.top_gainers_losers',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/coins/top_gainers_losers',
    operationId: 'coins-top-gainers-losers',
};
exports.tool = {
    name: 'get_coins_top_gainers_losers',
    description: 'This endpoint allows you to **query the top 30 coins with largest price gain and loss by a specific time duration**',
    inputSchema: {
        type: 'object',
        properties: {
            vs_currency: {
                type: 'string',
                description: 'target currency of coins <br> *refers to [`/simple/supported_vs_currencies`](/reference/simple-supported-currencies).',
            },
            duration: {
                type: 'string',
                description: 'filter result by time range <br> Default value: `24h`',
                enum: ['1h', '24h', '7d', '14d', '30d', '60d', '1y'],
            },
            top_coins: {
                type: 'string',
                description: 'filter result by market cap ranking (top 300 to 1000) or all coins (including coins that do not have market cap) <br> Default value: `1000`',
                enum: ['300', '500', '1000', 'all'],
            },
        },
    },
};
const handler = async (client, args) => {
    const body = args;
    return (0, types_1.asTextContentResult)(await client.coins.topGainersLosers.get(body));
};
exports.handler = handler;
exports.default = { metadata: exports.metadata, tool: exports.tool, handler: exports.handler };
//# sourceMappingURL=get-coins-top-gainers-losers.js.map