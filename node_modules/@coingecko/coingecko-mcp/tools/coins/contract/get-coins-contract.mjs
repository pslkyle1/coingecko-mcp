// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { asTextContentResult } from '@coingecko/coingecko-mcp/tools/types';
export const metadata = {
    resource: 'coins.contract',
    operation: 'read',
    tags: [],
    httpMethod: 'get',
    httpPath: '/coins/{id}/contract/{contract_address}',
    operationId: 'coins-contract-address',
};
export const tool = {
    name: 'get_coins_contract',
    description: 'This endpoint allows you to **query all the metadata (image, websites, socials, description, contract address, etc.) and market data (price, ATH, exchange tickers, etc.) of a coin from the CoinGecko coin page based on an asset platform and a particular token contract address**',
    inputSchema: {
        type: 'object',
        properties: {
            id: {
                type: 'string',
            },
            contract_address: {
                type: 'string',
            },
        },
    },
};
export const handler = async (client, args) => {
    const { contract_address, ...body } = args;
    return asTextContentResult(await client.coins.contract.get(contract_address, body));
};
export default { metadata, tool, handler };
//# sourceMappingURL=get-coins-contract.mjs.map